{"config":{"lang":["ru"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p> cardlink <p>\u0410\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u044b\u0439 Python \u043a\u043b\u0438\u0435\u043d\u0442 \u0434\u043b\u044f Cardlink API</p> </p> <p> </p>"},{"location":"#_1","title":"\ud83d\udccc \u041e \u043f\u0440\u043e\u0435\u043a\u0442\u0435","text":"<p>cardlink \u2014 \u0430\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u044b\u0439 Python \u043a\u043b\u0438\u0435\u043d\u0442 \u0434\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0441 Cardlink API. \u041f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0441\u043e\u0437\u0434\u0430\u0432\u0430\u0442\u044c \u0441\u0447\u0435\u0442\u0430, \u043f\u043e\u043b\u0443\u0447\u0430\u0442\u044c \u0441\u0441\u044b\u043b\u043a\u0438 \u043d\u0430 \u043e\u043f\u043b\u0430\u0442\u0443 \u0438 \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0442\u044c \u043f\u043b\u0430\u0442\u0435\u0436\u0438 \u043f\u043e\u043b\u043d\u043e\u0441\u0442\u044c\u044e \u0430\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u043e.</p>"},{"location":"#_2","title":"\ud83d\udcac \u0421\u043e\u043e\u0431\u0449\u0435\u0441\u0442\u0432\u043e","text":"<p>\u041f\u0440\u0438\u0441\u043e\u0435\u0434\u0438\u043d\u044f\u0439\u0442\u0435\u0441\u044c \u043a \u043d\u0430\u0448\u0435\u043c\u0443 \u0447\u0430\u0442\u0443 \u0432 Telegram: @pythonCardlink</p>"},{"location":"#_3","title":"\ud83d\udee0 \u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430","text":"<pre><code>pip install cardlink\n</code></pre>"},{"location":"#quick-start","title":"Quick start","text":"<pre><code>import asyncio\nfrom cardlink import CardLink\n\nasync def main():\n    cl = CardLink(token=\"YOUR_TOKEN\", shop_id=\"YOUR_SHOP_ID\")\n\n    bill = await cl.create_bill(amount=100)\n    return bill.link_page_url  # \u0421\u0441\u044b\u043b\u043a\u0430 \u0434\u043b\u044f \u043e\u043f\u043b\u0430\u0442\u044b \u0441\u0447\u0451\u0442\u0430\n\nif __name__ == \"__main__\":\n    print(asyncio.run(main()))\n</code></pre>"},{"location":"#_4","title":"\ud83d\udce6 \u041e\u0441\u043d\u043e\u0432\u043d\u044b\u0435 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u0438","text":"<ul> <li>\u2705 \u0410\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u044b\u0439 \u043a\u043b\u0438\u0435\u043d\u0442 \u043d\u0430 <code>aiohttp</code> </li> <li>\u2705 \u041f\u043e\u043b\u043d\u0430\u044f \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u043a\u0430 Cardlink API </li> <li>\u2705 \u0411\u044b\u0441\u0442\u0440\u043e\u0435 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0441\u0447\u0435\u0442\u043e\u0432 \u0438 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0441\u0441\u044b\u043b\u043e\u043a \u0434\u043b\u044f \u043e\u043f\u043b\u0430\u0442\u044b  </li> <li>\u2705 \u0421\u043e\u0432\u043c\u0435\u0441\u0442\u0438\u043c\u043e\u0441\u0442\u044c \u0441 Python 3.10+  </li> </ul>"},{"location":"#_5","title":"\ud83d\udc96 \u041f\u043e\u0434\u0434\u0435\u0440\u0436\u043a\u0430 \u043f\u0440\u043e\u0435\u043a\u0442\u0430","text":"<p>\u0412\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0430\u0442\u044c \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0443 \u0434\u043e\u043d\u0430\u0442\u043e\u043c:</p> \u0421\u0435\u0442\u044c \u0410\u0434\u0440\u0435\u0441 TON <code>UQCekZTSqysK4OUQFovzI31CILQj0GGjnYxBV77HlK2Zv1BM</code> TRON <code>TVr8bD8toKF14YY46apFgS1PgiBBtvKsfu</code> ETH <code>0x6406D459D592456dA5E78D789b68029EC7950890</code>"},{"location":"#_6","title":"\ud83d\udcdd \u041b\u0438\u0446\u0435\u043d\u0437\u0438\u044f","text":"<p>\u041f\u0440\u043e\u0435\u043a\u0442 \u0440\u0430\u0441\u043f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u044f\u0435\u0442\u0441\u044f \u043f\u043e\u0434 \u043b\u0438\u0446\u0435\u043d\u0437\u0438\u0435\u0439 MIT.</p>"},{"location":"#_7","title":"\ud83d\udccc \u041a\u043e\u043d\u0442\u0430\u043a\u0442\u044b \u0438 \u043e\u0431\u0440\u0430\u0442\u043d\u0430\u044f \u0441\u0432\u044f\u0437\u044c","text":"<ul> <li>Telegram: @pythonCardlink </li> <li>GitHub Issues: \u043e\u0442\u043a\u0440\u044b\u0432\u0430\u0439\u0442\u0435 \u043b\u044e\u0431\u044b\u0435 \u0431\u0430\u0433\u0438 \u0438\u043b\u0438 \u043f\u0440\u0435\u0434\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u043f\u0440\u044f\u043c\u043e \u0432 \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u0438.</li> </ul>"},{"location":"api/","title":"API","text":"<p>LaFTon Technology \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u0443\u0434\u043e\u0431\u043d\u044b\u0439 Python SDK \u0434\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0441 CardLink API.</p>"},{"location":"api/#methods","title":"Methods","text":"<p>\u041c\u0435\u0442\u043e\u0434\u044b API:</p> <ul> <li><code>CardLink().create_bill()</code></li> <li><code>CardLink().get_bill()</code></li> <li><code>CardLink().toggle_activity()</code></li> <li><code>CardLink().search_bill()</code></li> <li><code>CardLink().bill_payments()</code></li> <li><code>CardLink().refund_full()</code></li> <li><code>CardLink().refund_partial()</code></li> <li><code>CardLink().get_refund()</code></li> <li><code>CardLink().search_refund()</code></li> <li><code>CardLink().personal_payout()</code></li> <li><code>CardLink().create_payout_credit_card()</code></li> <li><code>CardLink().create_payout_sbp()</code></li> <li><code>CardLink().create_payout_crypto()</code></li> <li><code>CardLink().create_payout_steam()</code></li> <li><code>CardLink().get_payout()</code></li> <li><code>CardLink().search_payout()</code></li> <li><code>CardLink().get_balance()</code></li> <li><code>CardLink().get_banks()</code></li> <li><code>CardLink().get_payment()</code></li> <li><code>CardLink().search_payments()</code></li> </ul>"},{"location":"api/#types","title":"Types","text":"<p>\u041e\u0441\u043d\u043e\u0432\u043d\u044b\u0435 \u0442\u0438\u043f\u044b, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c\u044b\u0435 \u0432 SDK:</p> <ul> <li><code>Balance</code></li> <li><code>Balances</code></li> <li><code>Bank</code></li> <li><code>Banks</code></li> <li><code>Bill</code></li> <li><code>BillStatus</code></li> <li><code>BillTypes</code></li> <li><code>CreatedBill</code></li> <li><code>Crypto</code></li> <li><code>Currency</code></li> <li><code>Item</code></li> <li><code>Links</code></li> <li><code>Meta</code></li> <li><code>Payment</code></li> <li><code>PaymentMethod</code></li> <li><code>PaymentStatus</code></li> <li><code>Payout</code></li> <li><code>Payouts</code></li> <li><code>PayoutStatus</code></li> <li><code>Refund</code></li> <li><code>RefundStatus</code></li> <li><code>RefundType</code></li> <li><code>SearchedBill</code></li> <li><code>SearchedPayments</code></li> <li><code>SearchedPayout</code></li> <li><code>SearchedRefund</code></li> </ul>"},{"location":"api/#errors","title":"Errors","text":"<p>\u041e\u0448\u0438\u0431\u043a\u0438, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043c\u043e\u0433\u0443\u0442 \u0432\u043e\u0437\u043d\u0438\u043a\u043d\u0443\u0442\u044c \u043f\u0440\u0438 \u0440\u0430\u0431\u043e\u0442\u0435 \u0441 API:</p> <ul> <li><code>APIError</code> \u2014 \u043e\u0448\u0438\u0431\u043a\u0430, \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u043c\u0430\u044f API.</li> <li><code>CardLinkError</code> \u2014 \u0431\u0430\u0437\u043e\u0432\u043e\u0435 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 SDK.</li> <li><code>DeserializationError</code> \u2014 \u043e\u0448\u0438\u0431\u043a\u0430 \u0434\u0435\u0441\u0435\u0440\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 \u043e\u0442\u0432\u0435\u0442\u0430.</li> <li><code>MethodValuesError</code> \u2014 \u043d\u0435\u0432\u0435\u0440\u043d\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432 \u043c\u0435\u0442\u043e\u0434\u0430.</li> <li><code>WrongNetworkError</code> \u2014 \u043e\u0448\u0438\u0431\u043a\u0430 \u0441\u0435\u0442\u0438.</li> </ul>"},{"location":"api/#usage-example","title":"Usage Example","text":"<pre><code>from cardlink import CardLink\n\ncardlink = CardLink(token=\"your_api_token\", shop_id=\"your_shop_id\")\n\nasync def main():\n    # \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0441\u0447\u0435\u0442\u0430\n    bill = await cardlink.create_bill(\n        amount=100,\n        order_id=\"ORDER123\",\n        description=\"\u041e\u043f\u043b\u0430\u0442\u0430 \u0437\u0430\u043a\u0430\u0437\u0430\",\n        currency_in=\"RUB\",\n        payer_email=\"user@example.com\",\n        payment_method=\"BANK_CARD\"\n    )\n    print(bill)\n</code></pre> <pre><code>from cardlink import CardLink\n\ncardlink = CardLink(token=\"your_api_token\", shop_id=\"your_shop_id\")\n\nasync def main():\n    # \u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u0431\u0430\u043b\u0430\u043d\u0441\u0430\n    balances = await cardlink.get_balance()\n    print(balances)\n</code></pre> <pre><code>from cardlink import CardLink\n\ncardlink = CardLink(token=\"your_api_token\", shop_id=\"your_shop_id\")\n\nasync def main():\n    # \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0432\u044b\u043f\u043b\u0430\u0442\u044b \u043d\u0430 \u043a\u0430\u0440\u0442\u0443\n    payout = await cardlink.create_payout_credit_card(\n        amount=500,\n        currency=\"RUB\",\n        account_identifier=\"4111111111111111\",\n        card_holder=\"IVAN IVANOV\"\n    )\n    print(payout)\n</code></pre>"},{"location":"examples/","title":"Usage Examples","text":"<p>\u0413\u043e\u0442\u043e\u0432\u044b\u0435 \u043f\u0440\u0438\u043c\u0435\u0440\u044b \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f cardlink \u0441 \u0430\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u044b\u043c \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u043c.</p>"},{"location":"examples/#_1","title":"\u0418\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f","text":"<pre><code>from cardlink import CardLink\n\ncardlink = CardLink(token=\"YOUR_API_TOKEN\", shop_id=\"YOUR_SHOP_ID\")\n</code></pre>"},{"location":"examples/#create_bill","title":"\u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0441\u0447\u0451\u0442\u0430 <code>create_bill</code>","text":"<pre><code>async def main():\n    bill = await cardlink.create_bill(\n        amount=100,\n        order_id=\"ORDER123\",\n        description=\"\u041e\u043f\u043b\u0430\u0442\u0430 \u0437\u0430\u043a\u0430\u0437\u0430\",\n        type=\"normal\",  # \u0438\u043b\u0438 \"multi\"\n        currency_in=\"RUB\",\n        custom=\"meta-data\",\n        payer_pays_commission=0,\n        payer_email=\"user@example.com\",\n        name=\"\u0418\u0432\u0430\u043d \u0418\u0432\u0430\u043d\u043e\u0432\",\n        ttl=3600,\n        success_url=\"https://example.com/success\",\n        fail_url=\"https://example.com/fail\",\n        payment_method=\"BANK_CARD\",  # \u0438\u043b\u0438 \"SBP\"\n        request_fields_email=True,\n        request_fields_phone=False,\n        request_fields_name=False,\n        request_fields_comment=False\n    )\n    print(bill)\n</code></pre>"},{"location":"examples/#get_balance","title":"\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0431\u0430\u043b\u0430\u043d\u0441\u0430 <code>get_balance</code>","text":"<pre><code>async def main():\n    balances = await cardlink.get_balance()\n    print(balances)\n</code></pre>"},{"location":"examples/#get_bill","title":"\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0441\u0447\u0451\u0442\u0430 <code>get_bill</code>","text":"<pre><code>async def main():\n    bill = await cardlink.get_bill(id=\"qwerty12345\")\n    print(bill)\n</code></pre>"},{"location":"examples/#bill_payments","title":"\u041f\u043b\u0430\u0442\u0435\u0436\u0438 \u043f\u043e \u0441\u0447\u0451\u0442\u0443 <code>bill_payments</code>","text":"<pre><code>async def main():\n    payments = await cardlink.bill_payments(\n        id=\"qwerty12345\",\n        per_page=50,\n        cursor=None\n    )\n    print(payments)\n</code></pre>"},{"location":"examples/#refund_full-refund_partial","title":"\u0412\u043e\u0437\u0432\u0440\u0430\u0442\u044b: \u043f\u043e\u043b\u043d\u044b\u0439 \u0438 \u0447\u0430\u0441\u0442\u0438\u0447\u043d\u044b\u0439 <code>refund_full</code> / <code>refund_partial</code>","text":"<pre><code># \u041f\u043e\u043b\u043d\u044b\u0439 \u0432\u043e\u0437\u0432\u0440\u0430\u0442\nasync def main():\n    refund = await cardlink.refund_full(payment_id=\"pay_123\")\n    print(refund)\n\n# \u0427\u0430\u0441\u0442\u0438\u0447\u043d\u044b\u0439 \u0432\u043e\u0437\u0432\u0440\u0430\u0442\nasync def main():\n    refund = await cardlink.refund_partial(\n        payment_id=\"pay_123\",\n        amount=25.5\n    )\n    print(refund)\n</code></pre>"},{"location":"examples/#get_refund","title":"\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0432\u043e\u0437\u0432\u0440\u0430\u0442\u0430 <code>get_refund</code>","text":"<pre><code>async def main():\n    refund = await cardlink.get_refund(id=\"refund_12345\")\n    print(refund)\n</code></pre>"},{"location":"examples/#search_refund","title":"\u041f\u043e\u0438\u0441\u043a \u0432\u043e\u0437\u0432\u0440\u0430\u0442\u043e\u0432 <code>search_refund</code>","text":"<pre><code>import datetime as dt\n\nasync def main():\n    result = await cardlink.search_refund(\n        payment_id=\"pay_123\",\n        start_date=dt.datetime(2025, 1, 1),\n        finish_date=dt.datetime(2025, 2, 1),\n        per_page=100,\n        cursor=None\n    )\n    print(result)\n</code></pre>"},{"location":"examples/#personal_payout","title":"\u041f\u0435\u0440\u0441\u043e\u043d\u0430\u043b\u044c\u043d\u0430\u044f \u0432\u044b\u043f\u043b\u0430\u0442\u0430 <code>personal_payout</code>","text":"<pre><code>async def main():\n    payout = await cardlink.personal_payout(\n        amount=150.0,\n        payout_account_id=\"acc_42\",\n        account_currency=\"RUB\",  # \u043e\u043f\u0446\u0438\u043e\u043d\u0430\u043b\u044c\u043d\u043e: 'USD', 'EUR'\n        recipient_pays_commission=False,\n        order_id=\"ORDER-OUT-1\"\n    )\n    print(payout)\n</code></pre>"},{"location":"examples/#steam-create_payout_","title":"\u0412\u044b\u043f\u043b\u0430\u0442\u044b: \u043a\u0430\u0440\u0442\u0430 / \u0421\u0411\u041f / \u043a\u0440\u0438\u043f\u0442\u043e / Steam <code>create_payout_*</code>","text":"<pre><code># \u041d\u0430 \u0431\u0430\u043d\u043a\u043e\u0432\u0441\u043a\u0443\u044e \u043a\u0430\u0440\u0442\u0443\nasync def main():\n    payout = await cardlink.create_payout_credit_card(\n        amount=500,\n        currency=\"RUB\",\n        account_identifier=\"4111111111111111\",\n        card_holder=\"IVAN IVANOV\",\n        account_currency=\"RUB\",\n        recipient_pays_commission=False,\n        order_id=\"PO-1001\"\n    )\n    print(payout)\n\n# \u0427\u0435\u0440\u0435\u0437 \u0421\u0411\u041f\nasync def main():\n    payout = await cardlink.create_payout_sbp(\n        amount=500,\n        currency=\"RUB\",\n        account_identifier=\"+79990000000\",  # \u0442\u0435\u043b\u0435\u0444\u043e\u043d/\u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440\n        account_bank=\"TCSBANK\",\n        account_currency=\"RUB\",\n        recipient_pays_commission=False,\n        order_id=\"PO-1002\"\n    )\n    print(payout)\n\n# \u041a\u0440\u0438\u043f\u0442\u043e\u0432\u0430\u043b\u044e\u0442\u0430\nasync def main():\n    payout = await cardlink.create_payout_crypto(\n        amount=100,\n        currency=\"USD\",\n        account_identifier=\"TLX...TRXADDRESS\",\n        account_network=\"TRX\",  # \u0438\u043b\u0438 \"ETH\"\n        account_currency=\"USD\",\n        recipient_pays_commission=True,\n        order_id=\"PO-1003\"\n    )\n    print(payout)\n\n# Steam\nasync def main():\n    payout = await cardlink.create_payout_steam(\n        amount=300,\n        currency=\"RUB\",\n        account_identifier=\"steam_7656119...\",\n        account_currency=\"RUB\",\n        recipient_pays_commission=False,\n        order_id=\"PO-1004\"\n    )\n    print(payout)\n</code></pre>"},{"location":"examples/#get_payout","title":"\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0432\u044b\u043f\u043b\u0430\u0442\u044b <code>get_payout</code>","text":"<pre><code>async def main():\n    payout = await cardlink.get_payout(\n        id=\"payout_12345\",\n        # \u0438\u043b\u0438:\n        # order_id=\"PO-1001\",\n    )\n    print(payout)\n</code></pre>"},{"location":"examples/#search_payout","title":"\u041f\u043e\u0438\u0441\u043a \u0432\u044b\u043f\u043b\u0430\u0442 <code>search_payout</code>","text":"<pre><code>import datetime as dt\n\nasync def main():\n    payouts = await cardlink.search_payout(\n        start_date=dt.datetime(2025, 3, 1),\n        finish_date=dt.datetime(2025, 3, 31),\n        per_page=100,\n        cursor=None\n    )\n    print(payouts)\n</code></pre>"},{"location":"examples/#get_banks","title":"\u0421\u043f\u0440\u0430\u0432\u043e\u0447\u043d\u0438\u043a \u0431\u0430\u043d\u043a\u043e\u0432 <code>get_banks</code>","text":"<pre><code>async def main():\n    banks = await cardlink.get_banks()\n    print(banks)\n</code></pre>"},{"location":"examples/#search_payments","title":"\u041f\u043e\u0438\u0441\u043a \u043f\u043b\u0430\u0442\u0435\u0436\u0435\u0439 <code>search_payments</code>","text":"<pre><code>\nimport datetime as dt\n\nasync def main():\n    payments = await cardlink.search_payments(\n        start_date=dt.datetime(2025, 1, 1),\n        finish_date=dt.datetime(2025, 1, 31),\n        shop_id=None,\n        per_page=200,\n        cursor=None\n    )\n    print(payments)\n</code></pre>"},{"location":"examples/#get_payment","title":"\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u043f\u043b\u0430\u0442\u0435\u0436\u0430 <code>get_payment</code>","text":"<pre><code>async def main():\n    payment = await cardlink.get_payment(\n        id=\"payment_12345\",\n        refunds=True,\n        chargeback=False\n    )\n    print(payment)\n</code></pre>"},{"location":"methods/","title":"Methods","text":"<p>Cardlink API methods implementation.</p> <ul> <li><code>CardLink().create_bill()</code></li> <li><code>CardLink().get_bill()</code></li> <li><code>CardLink().toggle_activity()</code></li> <li><code>CardLink().search_bill()</code></li> <li><code>CardLink().bill_payments()</code></li> <li><code>CardLink().refund_full()</code></li> <li><code>CardLink().refund_partial()</code></li> <li><code>CardLink().get_refund()</code></li> <li><code>CardLink().search_refund()</code></li> <li><code>CardLink().personal_payout()</code></li> <li><code>CardLink().create_payout_credit_card()</code></li> <li><code>CardLink().create_payout_sbp()</code></li> <li><code>CardLink().create_payout_crypto()</code></li> <li><code>CardLink().create_payout_steam()</code></li> <li><code>CardLink().get_payout()</code></li> <li><code>CardLink().search_payout()</code></li> <li><code>CardLink().get_balance()</code></li> <li><code>CardLink().get_banks()</code></li> <li><code>CardLink().get_payment()</code></li> <li><code>CardLink().search_payments()</code></li> </ul>"},{"location":"types/","title":"Types","text":"<p>Cardlink API types implementation.</p> <ul> <li><code>Balance</code></li> <li><code>Balances</code></li> <li><code>Bank</code></li> <li><code>Banks</code></li> <li><code>Bill</code></li> <li><code>BillStatus</code></li> <li><code>BillTypes</code></li> <li><code>CreatedBill</code></li> <li><code>Crypto</code></li> <li><code>Currency</code></li> <li><code>Item</code></li> <li><code>Links</code></li> <li><code>Meta</code></li> <li><code>Payment</code></li> <li><code>PaymentMethod</code></li> <li><code>PaymentStatus</code></li> <li><code>Payout</code></li> <li><code>Payouts</code></li> <li><code>PayoutStatus</code></li> <li><code>Refund</code></li> <li><code>RefundStatus</code></li> <li><code>RefundType</code></li> <li><code>SearchedBill</code></li> <li><code>SearchedPayments</code></li> <li><code>SearchedPayout</code></li> <li><code>SearchedRefund</code></li> </ul>"}]}